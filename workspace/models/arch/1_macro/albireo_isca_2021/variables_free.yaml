variables:
  version: 0.4
  CIM_ARCHITECTURE: True
  # ===========================================================================
  # Specific to this architecture
  # ===========================================================================
  N_COLUMNS: 5
  N_ROWS: 3
  GLB_DEPTH_SCALE: 1
  N_PLCU: 3
  N_PLCG: 9
  N_STAR_COUPLED_GROUPS_OF_ROWS: 3

  # ===========================================================================
  # NOTES
  # ===========================================================================
  # - N_COLUMNS=N_d is the number of outputs in each cycle = number of parallel receptive fields.
  #     - N_d=5 in the original paper.
  # - N_ROWS is the number of input rows (single channel) in each cycle.
  #    - 3 in the original paper.
  # - N_STAR_COUPLED_ROWS is basically the number of channels in the input.
  #     - 3 in the original paper.
  # - Therefore, the number of weights in each cycle is N_m=N_ROWS * N_STAR_COUPLED_GROUPS_OF_ROWS.
  #     - N_m=9 in the original paper.
  #     - Also the size of a receptive field.
  # - Let's not change the shape of the receptive field. So fix N_ROWS=N_START_COUPLED_GROUPS_OF_ROWS=3.
  # - The total number of inputs (with duplicates) to the PLCU is: #weights * N_COLUMNS
  # - The total number of distinct inputs (wavelengths) to the PLCU is:
  #    - 3 * (3 + N_COLUMNS - 1)
  #    - This is the number that affects MRR cross-talk.
  #    - For N_COLUMNS=5, this is 3 * 7 = 21 (original paper).
  #    - For N_COLUMNS=7, this is 3 * 9 = 27.
  #    - For N_COLUMNS=9, this is 3 * 11 = 33.
  #    - For N_COLUMNS=11, this is 3 * 13 = 39.
  # - The number distinct inputs (wavelengths) to the PLCG is:
  #    - N_PLCU * #distinct inputs to the PLCU
  #    - This is the number that affects AWG cross-talk.
  #    - For (N_PLCU=3, N_COLUMNS=5), this is 3 * 21 = 63 (original paper).
  #    - For (N_PLCU=3, N_COLUMNS=7), this is 3 * 27 = 81.
  #    - For (N_PLCU=3, N_COLUMNS=9), this is 3 * 33 = 99.
  #    - For (N_PLCU=3, N_COLUMNS=11), this is 3 * 39 = 117.
  #    - For (N_PLCU=6, N_COLUMNS=5), this is 6 * 21 = 126.
  #    - For (N_PLCU=6, N_COLUMNS=7), this is 6 * 27 = 162.
  #    - For (N_PLCU=6, N_COLUMNS=9), this is 6 * 33 = 198.
  

  # ===========================================================================
  # Set by CiM Processor
  # ===========================================================================
  ARRAY_WORDLINES:        Should have been set by ArrayProcessor.
  ARRAY_BITLINES:         Should have been set by ArrayProcessor.
  ARRAY_PARALLEL_INPUTS:  Should have been set by ArrayProcessor.
  ARRAY_PARALLEL_OUTPUTS: Should have been set by ArrayProcessor.
  ARRAY_PARALLEL_WEIGHTS: Should have been set by ArrayProcessor.

  # ===========================================================================
  # Encoding-dependent parameters
  # ===========================================================================
  ENCODED_INPUT_BITS:  INPUT_BITS # xnor takes an extra bit
  ENCODED_WEIGHT_BITS: WEIGHT_BITS
  ENCODED_OUTPUT_BITS: OUTPUT_BITS

  INPUT_ENCODING_FUNC: offset_encode_hist
  WEIGHT_ENCODING_FUNC: two_part_magnitude_encode_if_signed_hist

  # For accuracy model. Can in-array accumulation include signed values?
  # Signed accumulation not compatible with offset encoding (since offset
  # encoding makes values non-negative).
  SIGNED_SUM_ACROSS_INPUTS: False
  SIGNED_SUM_ACROSS_WEIGHTS: True

  # ===========================================================================
  # Architecture & CiM Array Structure
  # ===========================================================================
  CIM_UNIT_WIDTH_CELLS:  1
  CIM_UNIT_DEPTH_CELLS:  1
  BITS_PER_CELL:         8

  # ===========================================================================
  # Data Converters
  # ===========================================================================
  ADC_RESOLUTION: 8
  VOLTAGE_DAC_RESOLUTION: 8
  TEMPORAL_DAC_RESOLUTION: 1
  DAC_RESOLUTION: max(VOLTAGE_DAC_RESOLUTION, TEMPORAL_DAC_RESOLUTION)
  N_ADC_PER_BANK: N_COLUMNS

  # ===========================================================================
  # Hardware
  # ===========================================================================
  BASE_LATENCY: 0.2E-9 # ns per cycle
  LATENCY_SCALING_SCALE: 0.625 if scaling == "aggressive" else 1
  GLOBAL_CYCLE_SECONDS: BASE_LATENCY * LATENCY_SCALING_SCALE * VOLTAGE_LATENCY_SCALE
  READ_PULSE_WIDTH: GLOBAL_CYCLE_SECONDS
